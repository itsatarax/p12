WRITING QUERIES
1. Count the customers with grades above Bangalore’s average.
SELECT GRADE, COUNT (DISTINCT CUSTOMER_ID)
FROM CUSTOMER1
GROUP BY GRADE
HAVING GRADE > (SELECT AVG(GRADE)
FROM CUSTOMER1
WHERE CITY='BANGALORE');
2. Find the name and numbers of all salesman who had more than one customer.
SELECT SALESMAN_ID, NAME
FROM SALESMAN A
WHERE 1 < (SELECT COUNT (*)
FROM CUSTOMER1
WHERE SALESMAN_ID=A.SALESMAN_ID);
OR
SELECT A.SALESMAN_ID, A.NAME
FROM SALESMAN A
WHERE A.SALESMAN_ID IN(SELECT C.SALESMAN_ID
FROM CUSTOMER1 C
GROUP BY C.SALESMAN_ID
HAVING COUNT (DISTINCT CUSTOMER_ID)>1);

3. List all the salesman and indicate those who have and don’t have customers in their cities (Use UNION operation.)
SELECT S.SALESMAN_ID, NAME, CUST_NAME, COMMISSION FROM SALESMAN S, CUSTOMER1 C
WHERE S.CITY =C.CITY
UNION
SELECT SALESMAN_ID, NAME, 'NO MATCH', COMMISSION FROM SALESMAN
WHERE NOT CITY = ANY (SELECT CITY FROM CUSTOMER1) ORDER BY 2 DESC;

4. Create a view that finds the salesman who has the customer with the highest order of a
day.
CREATE VIEW ELITSALESMAN AS
SELECT B.ORD_DATE, A.SALESMAN_ID, A.NAME
FROM SALESMAN A, ORDERS B
WHERE A.SALESMAN_ID = B.SALESMAN_ID
AND B.PURCHASE_AMT=(SELECT MAX (PURCHASE_AMT)
FROM ORDERS C
WHERE C.ORD_DATE = B.ORD_DATE);

5. Demonstrate the DELETE operation by removing salesman with id 1000. All his orders
must also be deleted.
DELETE FROM SALESMAN
WHERE SALESMAN_ID=1000;
Then Execute
SELECT * FROM SALESMAN;
SELECT * FROM ORDERS;

